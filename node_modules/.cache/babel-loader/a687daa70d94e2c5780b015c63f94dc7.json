{"ast":null,"code":"import _slicedToArray from \"/Users/paulandnicola/Docs/projects/react/sportsbot5000/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/paulandnicola/Docs/projects/react/sportsbot5000/src/components/App.jsx\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Router, Route } from 'react-router-dom';\nimport Header from './Header';\nimport Home from './Home';\nimport MyTeams from './MyTeams';\nimport './App.scss';\n\nconst App = () => {\n  const _useState = useState(window.innerWidth < 960),\n        _useState2 = _slicedToArray(_useState, 2),\n        isCompact = _useState2[0],\n        setIsCompact = _useState2[1];\n\n  useEffect(() => {\n    window.addEventListener('resize', () => setIsCompact(window.innerWidth < 960));\n    return () => window.removeEventListener('resize', setIsCompact);\n  });\n\n  const createData = (date, time, game, tv, premium, free, highlights) => ({\n    date,\n    time,\n    game,\n    tv,\n    premium,\n    free,\n    highlights\n  });\n\n  const columns = [{\n    name: 'date',\n    label: 'Date'\n  }, {\n    name: 'time',\n    label: 'Time'\n  }, {\n    name: 'game',\n    label: 'Game'\n  }, {\n    name: 'tv',\n    label: 'TV'\n  }, {\n    name: 'premium',\n    label: 'Premium Streams'\n  }, {\n    name: 'free',\n    label: 'Free Streams'\n  }, {\n    name: 'highlights',\n    label: 'Highlights'\n  }];\n\n  const convertToIcons = text => {\n    const matchup = text.includes('@') ? text.split('@') : [text];\n    return React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../images/\".concat(matchup[0].trim().toLowerCase(), \".png\")),\n      height: \"25px\",\n      alt: matchup[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), matchup.length > 1 && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        padding: '0px 10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"@\"), React.createElement(\"img\", {\n      src: require(\"../images/\".concat(matchup[1].trim().toLowerCase(), \".png\")),\n      height: \"25px\",\n      alt: matchup[1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })));\n  };\n\n  const rows = [createData('Sept 18', '9:55am', isCompact ? convertToIcons('Tottenham @ Chelsea') : 'Tottenham @ Chelsea', 'TNT', React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"TNT\"), React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Reddit\"), ''), createData('Sept 19', '9:55am', isCompact ? convertToIcons('Dbacks @ Padres') : 'Dbacks @ Padres', 'FOX Sports AZ', React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"ABC\"), React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Reddit\"), React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"ESPN\")), createData('Sept 20', '9:55am', isCompact ? convertToIcons('Suns @ Kings') : 'Suns @ Kings', 'FOX Sports AZ', React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"CBS\"), React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Reddit\"), ''), createData('Sept 21', '9:55am', isCompact ? convertToIcons('Coyotes @ Sharks') : 'Coyotes @ Sharks', 'FOX Sports AZ', React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"FOX\"), React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Reddit\"), ''), createData('Sept 22', '9:55am', isCompact ? convertToIcons('Cardinals @ Panthers') : 'Cardinals @ Panthers', 'FOX', React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"NBC\"), React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Reddit\"), ''), createData('Sept 23', '9:55am', isCompact ? convertToIcons('Masters') : 'Masters', 'NBC', React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"ESPN2\"), React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Reddit\"), '')];\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    render: props => React.createElement(Header, Object.assign({}, props, {\n      isCompact: isCompact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/home\",\n    render: props => React.createElement(Home, Object.assign({}, props, {\n      isCompact: isCompact,\n      columns: columns,\n      rows: rows,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/my/teams\",\n    render: props => React.createElement(MyTeams, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/paulandnicola/Docs/projects/react/sportsbot5000/src/components/App.jsx"],"names":["React","Fragment","useEffect","useState","Router","Route","Header","Home","MyTeams","App","window","innerWidth","isCompact","setIsCompact","addEventListener","removeEventListener","createData","date","time","game","tv","premium","free","highlights","columns","name","label","convertToIcons","text","matchup","includes","split","display","alignItems","require","trim","toLowerCase","length","padding","rows","props"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { Router, Route } from 'react-router-dom';\nimport Header from './Header';\nimport Home from './Home';\nimport MyTeams from './MyTeams';\nimport './App.scss';\n\nconst App = () => {\n  const [isCompact, setIsCompact] = useState(window.innerWidth < 960);\n  useEffect(() => {\n    window.addEventListener('resize', () => setIsCompact(window.innerWidth < 960));\n    return () => window.removeEventListener('resize', setIsCompact);\n  });\n\n  const createData = (date, time, game, tv, premium, free, highlights) => ({\n    date, time, game, tv, premium, free, highlights,\n  });\n\n  const columns = [\n    { name: 'date', label: 'Date' },\n    { name: 'time', label: 'Time' },\n    { name: 'game', label: 'Game' },\n    { name: 'tv', label: 'TV' },\n    { name: 'premium', label: 'Premium Streams' },\n    { name: 'free', label: 'Free Streams' },\n    { name: 'highlights', label: 'Highlights' },\n  ];\n\n  const convertToIcons = (text) => {\n    const matchup = text.includes('@') ? text.split('@') : [text];\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <img src={require(`../images/${matchup[0].trim().toLowerCase()}.png`)} height=\"25px\" alt={matchup[0]} />\n        {matchup.length > 1 && (\n          <Fragment>\n            <span style={{ padding: '0px 10px' }}>@</span>\n            <img src={require(`../images/${matchup[1].trim().toLowerCase()}.png`)} height=\"25px\" alt={matchup[1]} />\n          </Fragment>\n        )}\n      </div>\n    );\n  };\n\n  const rows = [\n    createData('Sept 18', '9:55am', isCompact ? convertToIcons('Tottenham @ Chelsea') : 'Tottenham @ Chelsea', 'TNT', <a href=\"/\">TNT</a>, <a href=\"/\">Reddit</a>, ''),\n    createData('Sept 19', '9:55am', isCompact ? convertToIcons('Dbacks @ Padres') : 'Dbacks @ Padres', 'FOX Sports AZ', <a href=\"/\">ABC</a>, <a href=\"/\">Reddit</a>, <a href=\"/\">ESPN</a>),\n    createData('Sept 20', '9:55am', isCompact ? convertToIcons('Suns @ Kings') : 'Suns @ Kings', 'FOX Sports AZ', <a href=\"/\">CBS</a>, <a href=\"/\">Reddit</a>, ''),\n    createData('Sept 21', '9:55am', isCompact ? convertToIcons('Coyotes @ Sharks') : 'Coyotes @ Sharks', 'FOX Sports AZ', <a href=\"/\">FOX</a>, <a href=\"/\">Reddit</a>, ''),\n    createData('Sept 22', '9:55am', isCompact ? convertToIcons('Cardinals @ Panthers') : 'Cardinals @ Panthers', 'FOX', <a href=\"/\">NBC</a>, <a href=\"/\">Reddit</a>, ''),\n    createData('Sept 23', '9:55am', isCompact ? convertToIcons('Masters') : 'Masters', 'NBC', <a href=\"/\">ESPN2</a>, <a href=\"/\">Reddit</a>, ''),\n  ];\n\n  return (\n    <Router>\n      <Route path=\"/\" render={props => <Header {...props} isCompact={isCompact} />} />\n      <Route path=\"/home\" render={props => <Home {...props} isCompact={isCompact} columns={columns} rows={rows} />} />\n      <Route path=\"/my/teams\" render={props => <MyTeams {...props} />} />\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}