{"ast":null,"code":"import _slicedToArray from \"/Users/paulandnicola/Docs/projects/react/sportsbot5000/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/paulandnicola/Docs/projects/react/sportsbot5000/src/components/App.jsx\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox'; // import MUIDataTable from 'mui-datatables';\n\nimport './App.scss';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    // marginTop: theme.spacing(3),\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 350\n  },\n  button: {\n    margin: theme.spacing(1),\n    display: 'block',\n    textTransform: 'capitalize',\n    backgroundColor: 'white'\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n    verticalAlign: 'bottom'\n  },\n  checkbox: {\n    padding: '0px 10px'\n  },\n  row: {\n    border: '1px solid gray'\n  },\n  cell: {\n    border: 'none'\n  },\n  container: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst createData = (date, time, game, tv, premium, free, highlights) => ({\n  date,\n  time,\n  game,\n  tv,\n  premium,\n  free,\n  highlights\n});\n\nconst columns = ['Date', 'Time', 'Game', 'TV', 'Premium Streams', 'Free Streams', 'Highlights'];\nconst rows = [createData('Sept 18', '9:55am', 'Tottenham @ Chelsea', 'TNT', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}, \"TNT\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}, \"Reddit\"), ''), createData('Sept 19', '9:55am', 'Dbacks @ Padres', 'FOX Sports AZ', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n}, \"ABC\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n}, \"Reddit\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n}, \"ESPN\")), createData('Sept 20', '9:55am', 'Suns @ Kings', 'FOX Sports AZ', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}, \"CBS\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}, \"Reddit\"), ''), createData('Sept 21', '9:55am', 'Coyotes @ Sharks', 'FOX Sports AZ', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, \"FOX\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, \"Reddit\"), ''), createData('Sept 22', '9:55am', 'Cardinals @ Panthers', 'FOX', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, \"NBC\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, \"Reddit\"), ''), createData('Sept 23', '9:55am', 'Masters', 'NBC', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, \"ESPN2\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, \"Reddit\"), '')];\n\nconst App = () => {\n  const _useStyles = useStyles(),\n        button = _useStyles.button,\n        cell = _useStyles.cell,\n        checkbox = _useStyles.checkbox,\n        container = _useStyles.container,\n        rightIcon = _useStyles.rightIcon,\n        root = _useStyles.root,\n        row = _useStyles.row,\n        table = _useStyles.table;\n\n  const _useState = useState(['Date', 'Time', 'Game', 'TV', 'Premium Streams', 'Free Streams', 'Highlights']),\n        _useState2 = _slicedToArray(_useState, 2),\n        checked = _useState2[0],\n        setChecked = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showFilters = _useState4[0],\n        setShowFilters = _useState4[1];\n\n  function handleToggleCheckbox(value) {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  }\n\n  ;\n  return React.createElement(\"div\", {\n    className: \"App \".concat(root),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: button,\n    variant: \"contained\",\n    onClick: () => setShowFilters(!showFilters),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Filters\", showFilters ? React.createElement(ExpandLess, {\n    className: rightIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }) : React.createElement(ExpandMore, {\n    className: rightIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), showFilters && React.createElement(List, {\n    disablePadding: true,\n    className: root,\n    dense: true,\n    disablePadding: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, columns.slice(3).map(value => {\n    const labelId = \"checkbox-list-label-\".concat(value.length === 1 ? value : value.split(' ').join(','));\n    return React.createElement(ListItem, {\n      key: value,\n      role: undefined,\n      button: true,\n      onClick: () => handleToggleCheckbox(value),\n      padding: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      classes: {\n        root: checkbox\n      },\n      edge: \"start\",\n      checked: checked.indexOf(value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      id: labelId,\n      primary: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }));\n  })), React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    classes: {\n      root: container\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: table,\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    classes: {\n      root: row\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, checked.map(header => React.createElement(Grid, {\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    key: \"header-\".concat(header),\n    classes: {\n      root: cell\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, header)))))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, rows.map(({\n    date,\n    time,\n    game,\n    tv,\n    premium,\n    free,\n    highlights\n  }) => React.createElement(TableRow, {\n    key: \"\".concat(date, \"-\").concat(time, \"-\").concat(game),\n    classes: {\n      root: row\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, checked.indexOf('Date') !== -1 && React.createElement(Grid, {\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    classes: {\n      root: cell\n    },\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, date)), checked.indexOf('Time') !== -1 && React.createElement(Grid, {\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    classes: {\n      root: cell\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, time)), checked.indexOf('Game') !== -1 && React.createElement(Grid, {\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    classes: {\n      root: cell\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, game)), checked.indexOf('TV') !== -1 && React.createElement(Grid, {\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    classes: {\n      root: cell\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, tv)), checked.indexOf('Premium Streams') !== -1 && React.createElement(Grid, {\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    classes: {\n      root: cell\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, premium)), checked.indexOf('Free Streams') !== -1 && React.createElement(Grid, {\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    classes: {\n      root: cell\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, free)), checked.indexOf('Highlights') !== -1 && React.createElement(Grid, {\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    classes: {\n      root: cell\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, highlights))))))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/paulandnicola/Docs/projects/react/sportsbot5000/src/components/App.jsx"],"names":["React","useState","makeStyles","Button","ExpandLess","ExpandMore","Grid","Table","TableBody","TableCell","TableHead","TableRow","List","ListItem","ListItemText","Checkbox","useStyles","theme","root","width","overflowX","table","minWidth","button","margin","spacing","display","textTransform","backgroundColor","rightIcon","marginLeft","verticalAlign","checkbox","padding","row","border","cell","container","createData","date","time","game","tv","premium","free","highlights","columns","rows","App","checked","setChecked","showFilters","setShowFilters","handleToggleCheckbox","value","currentIndex","indexOf","newChecked","push","splice","slice","map","labelId","length","split","join","undefined","header"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB,C,CACA;;AACA,OAAO,YAAP;AAEA,MAAMC,SAAS,GAAGd,UAAU,CAACe,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJ;AACAC,IAAAA,SAAS,EAAE;AAHP,GAD+B;AAOrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GAP8B;AAUrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,CADF;AAENC,IAAAA,OAAO,EAAE,OAFH;AAGNC,IAAAA,aAAa,EAAE,YAHT;AAINC,IAAAA,eAAe,EAAE;AAJX,GAV6B;AAgBrCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAEb,KAAK,CAACQ,OAAN,CAAc,CAAd,CADH;AAETM,IAAAA,aAAa,EAAE;AAFN,GAhB0B;AAoBrCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE;AADD,GApB2B;AAuBrCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,MAAM,EAAE;AADL,GAvBgC;AA0BrCC,EAAAA,IAAI,EAAE;AACJD,IAAAA,MAAM,EAAE;AADJ,GA1B+B;AA6BrCE,EAAAA,SAAS,EAAE;AACTb,IAAAA,MAAM,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;AADC;AA7B0B,CAAL,CAAN,CAA5B;;AAkCA,MAAMa,UAAU,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,IAAb,EAAmBC,EAAnB,EAAuBC,OAAvB,EAAgCC,IAAhC,EAAsCC,UAAtC,MAAsD;AACvEN,EAAAA,IADuE;AACjEC,EAAAA,IADiE;AAC3DC,EAAAA,IAD2D;AACrDC,EAAAA,EADqD;AACjDC,EAAAA,OADiD;AACxCC,EAAAA,IADwC;AAClCC,EAAAA;AADkC,CAAtD,CAAnB;;AAIA,MAAMC,OAAO,GAAG,CACd,MADc,EAEd,MAFc,EAGd,MAHc,EAId,IAJc,EAKd,iBALc,EAMd,cANc,EAOd,YAPc,CAAhB;AAUA,MAAMC,IAAI,GAAG,CACXT,UAAU,CAAC,SAAD,EAAY,QAAZ,EAAsB,qBAAtB,EAA6C,KAA7C,EAAoD;AAAG,EAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAApD,EAAyE;AAAG,EAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAzE,EAAiG,EAAjG,CADC,EAEXA,UAAU,CAAC,SAAD,EAAY,QAAZ,EAAsB,iBAAtB,EAAyC,eAAzC,EAA0D;AAAG,EAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA1D,EAA+E;AAAG,EAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA/E,EAAuG;AAAG,EAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAvG,CAFC,EAGXA,UAAU,CAAC,SAAD,EAAY,QAAZ,EAAsB,cAAtB,EAAsC,eAAtC,EAAuD;AAAG,EAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD,EAA4E;AAAG,EAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA5E,EAAoG,EAApG,CAHC,EAIXA,UAAU,CAAC,SAAD,EAAY,QAAZ,EAAsB,kBAAtB,EAA0C,eAA1C,EAA2D;AAAG,EAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA3D,EAAgF;AAAG,EAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhF,EAAwG,EAAxG,CAJC,EAKXA,UAAU,CAAC,SAAD,EAAY,QAAZ,EAAsB,sBAAtB,EAA8C,KAA9C,EAAqD;AAAG,EAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAArD,EAA0E;AAAG,EAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA1E,EAAkG,EAAlG,CALC,EAMXA,UAAU,CAAC,SAAD,EAAY,QAAZ,EAAsB,SAAtB,EAAiC,KAAjC,EAAwC;AAAG,EAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAxC,EAA+D;AAAG,EAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA/D,EAAuF,EAAvF,CANC,CAAb;;AASA,MAAMU,GAAG,GAAG,MAAM;AAAA,qBAC2DhC,SAAS,EADpE;AAAA,QACRO,MADQ,cACRA,MADQ;AAAA,QACAa,IADA,cACAA,IADA;AAAA,QACMJ,QADN,cACMA,QADN;AAAA,QACgBK,SADhB,cACgBA,SADhB;AAAA,QAC2BR,SAD3B,cAC2BA,SAD3B;AAAA,QACsCX,IADtC,cACsCA,IADtC;AAAA,QAC4CgB,GAD5C,cAC4CA,GAD5C;AAAA,QACiDb,KADjD,cACiDA,KADjD;;AAAA,oBAEcpB,QAAQ,CAAC,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,IAAzB,EAA+B,iBAA/B,EAAkD,cAAlD,EAAkE,YAAlE,CAAD,CAFtB;AAAA;AAAA,QAETgD,OAFS;AAAA,QAEAC,UAFA;;AAAA,qBAGsBjD,QAAQ,CAAC,KAAD,CAH9B;AAAA;AAAA,QAGTkD,WAHS;AAAA,QAGIC,cAHJ;;AAKhB,WAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AACnC,UAAMC,YAAY,GAAGN,OAAO,CAACO,OAAR,CAAgBF,KAAhB,CAArB;AACA,UAAMG,UAAU,GAAG,CAAC,GAAGR,OAAJ,CAAnB;;AAEA,QAAIM,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,KAAhB;AACD,KAFD,MAEO;AACLG,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACD;;AAEDL,IAAAA,UAAU,CAACO,UAAD,CAAV;AACD;;AAAA;AAED,SACE;AAAK,IAAA,SAAS,gBAASvC,IAAT,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEK,MAAnB;AAA2B,IAAA,OAAO,EAAC,WAAnC;AAA+C,IAAA,OAAO,EAAE,MAAM6B,cAAc,CAAC,CAACD,WAAF,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEGA,WAAW,GAAG,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEtB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA0C,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEA,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFxD,CADF,EAKGsB,WAAW,IACV,oBAAC,IAAD;AAAM,IAAA,cAAc,MAApB;AAAqB,IAAA,SAAS,EAAEjC,IAAhC;AAAsC,IAAA,KAAK,EAAE,IAA7C;AAAmD,IAAA,cAAc,EAAE,IAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG4B,OAAO,CAACc,KAAR,CAAc,CAAd,EAAiBC,GAAjB,CAAqBP,KAAK,IAAI;AAC7B,UAAMQ,OAAO,iCAA0BR,KAAK,CAACS,MAAN,KAAiB,CAAjB,GAAqBT,KAArB,GAA6BA,KAAK,CAACU,KAAN,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB,GAAtB,CAAvD,CAAb;AAEA,WACE,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEX,KADP;AAEE,MAAA,IAAI,EAAEY,SAFR;AAGE,MAAA,MAAM,MAHR;AAIE,MAAA,OAAO,EAAE,MAAMb,oBAAoB,CAACC,KAAD,CAJrC;AAKE,MAAA,OAAO,EAAC,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAE;AAAEpC,QAAAA,IAAI,EAAEc;AAAR,OADX;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,OAAO,EAAEiB,OAAO,CAACO,OAAR,CAAgBF,KAAhB,MAA2B,CAAC,CAHvC;AAIE,MAAA,QAAQ,EAAE,CAAC,CAJb;AAKE,MAAA,aAAa,MALf;AAME,MAAA,UAAU,EAAE;AAAE,2BAAmBQ;AAArB,OANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAeE,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAEA,OAAlB;AAA2B,MAAA,OAAO,EAAER,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CADF;AAmBD,GAtBA,CADH,CANJ,EAuCE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,OAAO,EAAE;AAAEpC,MAAAA,IAAI,EAAEmB;AAAR,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAc,IAAA,YAAY,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEhB,KAAlB;AAAyB,IAAA,IAAI,EAAC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE;AAAEH,MAAAA,IAAI,EAAEgB;AAAR,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGe,OAAO,CAACY,GAAR,CAAYM,MAAM,IACjB,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAc,IAAA,YAAY,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,GAAG,mBAAYA,MAAZ,CAAd;AAAoC,IAAA,OAAO,EAAE;AAAEjD,MAAAA,IAAI,EAAEkB;AAAR,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8D+B,MAA9D,CADF,CADD,CADH,CADF,CADF,CADF,EAYE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,IAAI,CAACc,GAAL,CAAS,CAAC;AACTtB,IAAAA,IADS;AACHC,IAAAA,IADG;AACGC,IAAAA,IADH;AACSC,IAAAA,EADT;AACaC,IAAAA,OADb;AACsBC,IAAAA,IADtB;AAC4BC,IAAAA;AAD5B,GAAD,KAGN,oBAAC,QAAD;AAAU,IAAA,GAAG,YAAKN,IAAL,cAAaC,IAAb,cAAqBC,IAArB,CAAb;AAA0C,IAAA,OAAO,EAAE;AAAEvB,MAAAA,IAAI,EAAEgB;AAAR,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGe,OAAO,CAACO,OAAR,CAAgB,MAAhB,MAA4B,CAAC,CAA7B,IACC,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAc,IAAA,YAAY,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAE;AAAEtC,MAAAA,IAAI,EAAEkB;AAAR,KAApB;AAAoC,IAAA,SAAS,EAAC,IAA9C;AAAmD,IAAA,KAAK,EAAC,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgEG,IAAhE,CADF,CAFJ,EAMGU,OAAO,CAACO,OAAR,CAAgB,MAAhB,MAA4B,CAAC,CAA7B,IACC,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAc,IAAA,YAAY,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAE;AAAEtC,MAAAA,IAAI,EAAEkB;AAAR,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCI,IAArC,CADF,CAPJ,EAWGS,OAAO,CAACO,OAAR,CAAgB,MAAhB,MAA4B,CAAC,CAA7B,IACC,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAc,IAAA,YAAY,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAE;AAAEtC,MAAAA,IAAI,EAAEkB;AAAR,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCK,IAArC,CADF,CAZJ,EAgBGQ,OAAO,CAACO,OAAR,CAAgB,IAAhB,MAA0B,CAAC,CAA3B,IACC,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAc,IAAA,YAAY,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAE;AAAEtC,MAAAA,IAAI,EAAEkB;AAAR,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCM,EAArC,CADF,CAjBJ,EAqBGO,OAAO,CAACO,OAAR,CAAgB,iBAAhB,MAAuC,CAAC,CAAxC,IACC,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAc,IAAA,YAAY,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAE;AAAEtC,MAAAA,IAAI,EAAEkB;AAAR,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCO,OAArC,CADF,CAtBJ,EA0BGM,OAAO,CAACO,OAAR,CAAgB,cAAhB,MAAoC,CAAC,CAArC,IACC,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAc,IAAA,YAAY,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAE;AAAEtC,MAAAA,IAAI,EAAEkB;AAAR,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCQ,IAArC,CADF,CA3BJ,EA+BGK,OAAO,CAACO,OAAR,CAAgB,YAAhB,MAAkC,CAAC,CAAnC,IACC,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAc,IAAA,YAAY,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAE;AAAEtC,MAAAA,IAAI,EAAEkB;AAAR,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCS,UAArC,CADF,CAhCJ,CADF,CAHH,CADH,CAZF,CADF,CADF,CAvCF,CADF;AAwGD,CA1HD;;AA4HA,eAAeG,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import MUIDataTable from 'mui-datatables';\nimport './App.scss';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    // marginTop: theme.spacing(3),\n    overflowX: 'auto',\n\n  },\n  table: {\n    minWidth: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n    display: 'block',\n    textTransform: 'capitalize',\n    backgroundColor: 'white',\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n    verticalAlign: 'bottom',\n  },\n  checkbox: {\n    padding: '0px 10px',\n  },\n  row: {\n    border: '1px solid gray',\n  },\n  cell: {\n    border: 'none',\n  },\n  container: {\n    margin: theme.spacing(1),\n  }\n}));\n\nconst createData = (date, time, game, tv, premium, free, highlights) => ({\n  date, time, game, tv, premium, free, highlights,\n});\n\nconst columns = [\n  'Date',\n  'Time',\n  'Game',\n  'TV',\n  'Premium Streams',\n  'Free Streams',\n  'Highlights',\n];\n\nconst rows = [\n  createData('Sept 18', '9:55am', 'Tottenham @ Chelsea', 'TNT', <a href=\"/\">TNT</a>, <a href=\"/\">Reddit</a>, ''),\n  createData('Sept 19', '9:55am', 'Dbacks @ Padres', 'FOX Sports AZ', <a href=\"/\">ABC</a>, <a href=\"/\">Reddit</a>, <a href=\"/\">ESPN</a>),\n  createData('Sept 20', '9:55am', 'Suns @ Kings', 'FOX Sports AZ', <a href=\"/\">CBS</a>, <a href=\"/\">Reddit</a>, ''),\n  createData('Sept 21', '9:55am', 'Coyotes @ Sharks', 'FOX Sports AZ', <a href=\"/\">FOX</a>, <a href=\"/\">Reddit</a>, ''),\n  createData('Sept 22', '9:55am', 'Cardinals @ Panthers', 'FOX', <a href=\"/\">NBC</a>, <a href=\"/\">Reddit</a>, ''),\n  createData('Sept 23', '9:55am', 'Masters', 'NBC', <a href=\"/\">ESPN2</a>, <a href=\"/\">Reddit</a>, ''),\n];\n\nconst App = () => {\n  const { button, cell, checkbox, container, rightIcon, root, row, table } = useStyles();\n  const [checked, setChecked] = useState(['Date', 'Time', 'Game', 'TV', 'Premium Streams', 'Free Streams', 'Highlights']);\n  const [showFilters, setShowFilters] = useState(false);\n\n  function handleToggleCheckbox(value) {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return (\n    <div className={`App ${root}`}>\n      <Button className={button} variant=\"contained\" onClick={() => setShowFilters(!showFilters)}>\n        Filters\n        {showFilters ? <ExpandLess className={rightIcon} /> : <ExpandMore className={rightIcon} />}\n      </Button>\n      {showFilters && (\n        <List disablePadding className={root} dense={true} disablePadding={true}>\n          {columns.slice(3).map(value => {\n            const labelId = `checkbox-list-label-${value.length === 1 ? value : value.split(' ').join(',')}`;\n\n            return (\n              <ListItem\n                key={value}\n                role={undefined}\n                button\n                onClick={() => handleToggleCheckbox(value)}\n                padding=\"none\"\n              >\n                <Checkbox\n                  classes={{ root: checkbox }}\n                  edge=\"start\"\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n                <ListItemText id={labelId} primary={value} />\n              </ListItem>\n            );\n          })}\n        </List>\n      )}\n\n      {/* <MUIDataTable\n      //   data={rows}\n      //   columns={columns}\n      //   options={{ responsive: 'stacked', selectableRows: 'none' }}\n      // /> */}\n\n      <Grid container spacing={1} classes={{ root: container }}>\n        <Grid item xs zeroMinWidth>\n          <Table className={table} size=\"small\">\n            <TableHead>\n              <TableRow classes={{ root: row }}>\n                <Grid container>\n                  {checked.map(header => (\n                    <Grid item xs zeroMinWidth>\n                      <TableCell key={`header-${header}`} classes={{ root: cell }}>{header}</TableCell>\n                    </Grid>\n                  ))}\n                </Grid>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(({\n                date, time, game, tv, premium, free, highlights,\n              }) => (\n                  <TableRow key={`${date}-${time}-${game}`} classes={{ root: row }}>\n                    <Grid container>\n                      {checked.indexOf('Date') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell classes={{ root: cell }} component=\"th\" scope=\"row\">{date}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Time') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell classes={{ root: cell }}>{time}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Game') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell classes={{ root: cell }}>{game}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('TV') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell classes={{ root: cell }}>{tv}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Premium Streams') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell classes={{ root: cell }}>{premium}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Free Streams') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell classes={{ root: cell }}>{free}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Highlights') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell classes={{ root: cell }}>{highlights}</TableCell>\n                        </Grid>\n                      )}\n                    </Grid>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}