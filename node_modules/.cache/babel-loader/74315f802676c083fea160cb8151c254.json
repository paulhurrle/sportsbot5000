{"ast":null,"code":"import React from'react';import{Link}from'react-router-dom';import Grid from'@material-ui/core/Grid';var Header=function Header(_ref){var isCompact=_ref.isCompact;React.createElement(Grid,{container:true},React.createElement(\"header\",{style:{width:'100%',background:'black',color:'white'}},React.createElement(\"h1\",{id:\"header-title\",style:{fontSize:isCompact?'36px':'56px',textAlign:'center',textShadow:'2px 2px orange'}},\"SPORTSBOT5000\"),React.createElement(\"nav\",{id:\"header-links\",style:{textAlign:'center'}},React.createElement(Link,{href:\"/\",style:{display:'inline-block',padding:'10px',color:'white'}},\"My Games\"),React.createElement(Link,{href:\"/\",style:{display:'inline-block',padding:'10px',color:'white'}},\"Popular Games\"),React.createElement(Link,{href:\"/my/teams\",style:{display:'inline-block',padding:'10px',color:'white'}},\"My Teams\"),React.createElement(Link,{href:\"/\",style:{display:'inline-block',padding:'10px',color:'white'}},\"Account\"),React.createElement(Link,{href:\"/\",style:{display:'inline-block',padding:'10px',color:'white'}},\"Sign Out\"))));{/*<Button className={button} variant=\"contained\" onClick={() => setShowFilters(!showFilters)}>\n  Filters\n  {showFilters ? <ExpandLess className={rightIcon} /> : <ExpandMore className={rightIcon} />}\n</Button>\n{showFilters && (\n  <List disablePadding className={root} dense={true}>\n    {columns.slice(3).map(value => {\n      const labelId = `checkbox-list-label-${value.length === 1 ? value : value.split(' ').join(',')}`;\n\n      return (\n        <ListItem\n          key={value}\n          role={undefined}\n          button\n          onClick={() => handleToggleCheckbox(value)}\n          padding=\"none\"\n        >\n          <Checkbox\n            classes={{ root: checkbox }}\n            edge=\"start\"\n            checked={checked.indexOf(value) !== -1}\n            tabIndex={-1}\n            disableRipple\n            inputProps={{ 'aria-labelledby': labelId }}\n          />\n          <ListItemText id={labelId} primary={value} />\n        </ListItem>\n      );\n    })}\n  </List>\n)}*/}{/*      <Grid container spacing={1} classes={{ root: container }}>\n  <Grid item xs zeroMinWidth style={{ padding: '0px' }}>\n    <Table className={table} size=\"small\">\n      <TableHead>\n        <TableRow classes={{ root: row }}>\n          <Grid container>\n            {checked.map(header => (\n              <Grid item xs zeroMinWidth>\n                <TableCell key={`header-${header}`} classes={{ root: cell }}>{header}</TableCell>\n              </Grid>\n            ))}\n          </Grid>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {rows.map(({\n          date, time, game, tv, premium, free, highlights,\n        }) => (\n            <TableRow key={`${date}-${time}-${game}`} classes={{ root: row }}>\n              <Grid container>\n                {checked.indexOf('Date') !== -1 && (\n                  <Grid item xs zeroMinWidth>\n                    <TableCell classes={{ root: cell }} component=\"th\" scope=\"row\">{date}</TableCell>\n                  </Grid>\n                )}\n                {checked.indexOf('Time') !== -1 && (\n                  <Grid item xs zeroMinWidth>\n                    <TableCell classes={{ root: cell }}>{time}</TableCell>\n                  </Grid>\n                )}\n                {checked.indexOf('Game') !== -1 && (\n                  <Grid item xs zeroMinWidth>\n                    <TableCell classes={{ root: cell }}>{game}</TableCell>\n                  </Grid>\n                )}\n                {checked.indexOf('TV') !== -1 && (\n                  <Grid item xs zeroMinWidth>\n                    <TableCell classes={{ root: cell }}>{tv}</TableCell>\n                  </Grid>\n                )}\n                {checked.indexOf('Premium Streams') !== -1 && (\n                  <Grid item xs zeroMinWidth>\n                    <TableCell classes={{ root: cell }}>{premium}</TableCell>\n                  </Grid>\n                )}\n                {checked.indexOf('Free Streams') !== -1 && (\n                  <Grid item xs zeroMinWidth>\n                    <TableCell classes={{ root: cell }}>{free}</TableCell>\n                  </Grid>\n                )}\n                {checked.indexOf('Highlights') !== -1 && (\n                  <Grid item xs zeroMinWidth>\n                    <TableCell classes={{ root: cell }}>{highlights}</TableCell>\n                  </Grid>\n                )}\n              </Grid>\n            </TableRow>\n          ))}\n      </TableBody>\n    </Table>\n  </Grid>\n        </Grid>*/}};export default Header;","map":{"version":3,"sources":["/Users/paulandnicola/Docs/projects/react/sportsbot5000/src/components/Header.jsx"],"names":["React","Link","Grid","Header","isCompact","width","background","color","fontSize","textAlign","textShadow","display","padding"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAmB,IAAhBC,CAAAA,SAAgB,MAAhBA,SAAgB,CAChC,oBAAC,IAAD,EAAM,SAAS,KAAf,EACE,8BAAQ,KAAK,CAAE,CAAEC,KAAK,CAAE,MAAT,CAAiBC,UAAU,CAAE,OAA7B,CAAsCC,KAAK,CAAE,OAA7C,CAAf,EACE,0BAAI,EAAE,CAAC,cAAP,CAAsB,KAAK,CAAE,CAAEC,QAAQ,CAAEJ,SAAS,CAAG,MAAH,CAAY,MAAjC,CAAyCK,SAAS,CAAE,QAApD,CAA8DC,UAAU,CAAE,gBAA1E,CAA7B,kBADF,CAEE,2BAAK,EAAE,CAAC,cAAR,CAAuB,KAAK,CAAE,CAAED,SAAS,CAAE,QAAb,CAA9B,EACE,oBAAC,IAAD,EAAM,IAAI,CAAC,GAAX,CAAe,KAAK,CAAE,CAAEE,OAAO,CAAE,cAAX,CAA2BC,OAAO,CAAE,MAApC,CAA4CL,KAAK,CAAE,OAAnD,CAAtB,aADF,CAEE,oBAAC,IAAD,EAAM,IAAI,CAAC,GAAX,CAAe,KAAK,CAAE,CAAEI,OAAO,CAAE,cAAX,CAA2BC,OAAO,CAAE,MAApC,CAA4CL,KAAK,CAAE,OAAnD,CAAtB,kBAFF,CAGE,oBAAC,IAAD,EAAM,IAAI,CAAC,WAAX,CAAuB,KAAK,CAAE,CAAEI,OAAO,CAAE,cAAX,CAA2BC,OAAO,CAAE,MAApC,CAA4CL,KAAK,CAAE,OAAnD,CAA9B,aAHF,CAIE,oBAAC,IAAD,EAAM,IAAI,CAAC,GAAX,CAAe,KAAK,CAAE,CAAEI,OAAO,CAAE,cAAX,CAA2BC,OAAO,CAAE,MAApC,CAA4CL,KAAK,CAAE,OAAnD,CAAtB,YAJF,CAKE,oBAAC,IAAD,EAAM,IAAI,CAAC,GAAX,CAAe,KAAK,CAAE,CAAEI,OAAO,CAAE,cAAX,CAA2BC,OAAO,CAAE,MAApC,CAA4CL,KAAK,CAAE,OAAnD,CAAtB,aALF,CAFF,CADF,EAYA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA8BE,CAEH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBA6De,CACjB,CA3GD,CA6GA,cAAeJ,CAAAA,MAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\n\nconst Header = ({ isCompact }) => {\n  <Grid container>\n    <header style={{ width: '100%', background: 'black', color: 'white' }}>\n      <h1 id=\"header-title\" style={{ fontSize: isCompact ? '36px' : '56px', textAlign: 'center', textShadow: '2px 2px orange' }}>SPORTSBOT5000</h1>\n      <nav id=\"header-links\" style={{ textAlign: 'center' }}>\n        <Link href=\"/\" style={{ display: 'inline-block', padding: '10px', color: 'white' }}>My Games</Link>\n        <Link href=\"/\" style={{ display: 'inline-block', padding: '10px', color: 'white' }}>Popular Games</Link>\n        <Link href=\"/my/teams\" style={{ display: 'inline-block', padding: '10px', color: 'white' }}>My Teams</Link>\n        <Link href=\"/\" style={{ display: 'inline-block', padding: '10px', color: 'white' }}>Account</Link>\n        <Link href=\"/\" style={{ display: 'inline-block', padding: '10px', color: 'white' }}>Sign Out</Link>\n      </nav>\n    </header>\n  </Grid>\n  {/*<Button className={button} variant=\"contained\" onClick={() => setShowFilters(!showFilters)}>\n  Filters\n  {showFilters ? <ExpandLess className={rightIcon} /> : <ExpandMore className={rightIcon} />}\n</Button>\n{showFilters && (\n  <List disablePadding className={root} dense={true}>\n    {columns.slice(3).map(value => {\n      const labelId = `checkbox-list-label-${value.length === 1 ? value : value.split(' ').join(',')}`;\n\n      return (\n        <ListItem\n          key={value}\n          role={undefined}\n          button\n          onClick={() => handleToggleCheckbox(value)}\n          padding=\"none\"\n        >\n          <Checkbox\n            classes={{ root: checkbox }}\n            edge=\"start\"\n            checked={checked.indexOf(value) !== -1}\n            tabIndex={-1}\n            disableRipple\n            inputProps={{ 'aria-labelledby': labelId }}\n          />\n          <ListItemText id={labelId} primary={value} />\n        </ListItem>\n      );\n    })}\n  </List>\n)}*/}\n\n  {/*      <Grid container spacing={1} classes={{ root: container }}>\n  <Grid item xs zeroMinWidth style={{ padding: '0px' }}>\n    <Table className={table} size=\"small\">\n      <TableHead>\n        <TableRow classes={{ root: row }}>\n          <Grid container>\n            {checked.map(header => (\n              <Grid item xs zeroMinWidth>\n                <TableCell key={`header-${header}`} classes={{ root: cell }}>{header}</TableCell>\n              </Grid>\n            ))}\n          </Grid>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {rows.map(({\n          date, time, game, tv, premium, free, highlights,\n        }) => (\n            <TableRow key={`${date}-${time}-${game}`} classes={{ root: row }}>\n              <Grid container>\n                {checked.indexOf('Date') !== -1 && (\n                  <Grid item xs zeroMinWidth>\n                    <TableCell classes={{ root: cell }} component=\"th\" scope=\"row\">{date}</TableCell>\n                  </Grid>\n                )}\n                {checked.indexOf('Time') !== -1 && (\n                  <Grid item xs zeroMinWidth>\n                    <TableCell classes={{ root: cell }}>{time}</TableCell>\n                  </Grid>\n                )}\n                {checked.indexOf('Game') !== -1 && (\n                  <Grid item xs zeroMinWidth>\n                    <TableCell classes={{ root: cell }}>{game}</TableCell>\n                  </Grid>\n                )}\n                {checked.indexOf('TV') !== -1 && (\n                  <Grid item xs zeroMinWidth>\n                    <TableCell classes={{ root: cell }}>{tv}</TableCell>\n                  </Grid>\n                )}\n                {checked.indexOf('Premium Streams') !== -1 && (\n                  <Grid item xs zeroMinWidth>\n                    <TableCell classes={{ root: cell }}>{premium}</TableCell>\n                  </Grid>\n                )}\n                {checked.indexOf('Free Streams') !== -1 && (\n                  <Grid item xs zeroMinWidth>\n                    <TableCell classes={{ root: cell }}>{free}</TableCell>\n                  </Grid>\n                )}\n                {checked.indexOf('Highlights') !== -1 && (\n                  <Grid item xs zeroMinWidth>\n                    <TableCell classes={{ root: cell }}>{highlights}</TableCell>\n                  </Grid>\n                )}\n              </Grid>\n            </TableRow>\n          ))}\n      </TableBody>\n    </Table>\n  </Grid>\n        </Grid>*/}\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}