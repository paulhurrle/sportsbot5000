{"ast":null,"code":"import _slicedToArray from \"/Users/paulandnicola/Docs/projects/react/sportsbot5000/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/paulandnicola/Docs/projects/react/sportsbot5000/src/components/App.jsx\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport MUIDataTable from 'mui-datatables';\nimport './App.scss';\n\nconst App = () => {\n  const _useState = useState(window.innerWidth < 960),\n        _useState2 = _slicedToArray(_useState, 2),\n        isCompact = _useState2[0],\n        setIsCompact = _useState2[1];\n\n  useEffect(() => {\n    window.addEventListener('resize', () => setIsCompact(window.innerWidth < 960));\n    return () => window.removeEventListener('resize', setIsCompact);\n  });\n\n  const createData = (date, time, game, tv, premium, free, highlights) => ({\n    date,\n    time,\n    game,\n    tv,\n    premium,\n    free,\n    highlights\n  });\n\n  const columns = [{\n    name: 'date',\n    label: 'Date'\n  }, {\n    name: 'time',\n    label: 'Time'\n  }, {\n    name: 'game',\n    label: 'Game'\n  }, {\n    name: 'tv',\n    label: 'TV'\n  }, {\n    name: 'premium',\n    label: 'Premium Streams'\n  }, {\n    name: 'free',\n    label: 'Free Streams'\n  }, {\n    name: 'highlights',\n    label: 'Highlights'\n  }];\n\n  const convertToIcons = text => {\n    const matchup = text.includes('@') ? text.split('@') : [text];\n    return React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../images/\".concat(matchup[0].trim().toLowerCase(), \".png\")),\n      height: \"25px\",\n      alt: matchup[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), matchup.length > 1 && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        padding: '0px 10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"@\"), React.createElement(\"img\", {\n      src: require(\"../images/\".concat(matchup[1].trim().toLowerCase(), \".png\")),\n      height: \"25px\",\n      alt: matchup[1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })));\n  };\n\n  const rows = [createData('Sept 18', '9:55am', isCompact ? convertToIcons('Tottenham @ Chelsea') : 'Tottenham @ Chelsea', 'TNT', React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"TNT\"), React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Reddit\"), ''), createData('Sept 19', '9:55am', isCompact ? convertToIcons('Dbacks @ Padres') : 'Dbacks @ Padres', 'FOX Sports AZ', React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"ABC\"), React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Reddit\"), React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"ESPN\")), createData('Sept 20', '9:55am', isCompact ? convertToIcons('Suns @ Kings') : 'Suns @ Kings', 'FOX Sports AZ', React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"CBS\"), React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Reddit\"), ''), createData('Sept 21', '9:55am', isCompact ? convertToIcons('Coyotes @ Sharks') : 'Coyotes @ Sharks', 'FOX Sports AZ', React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"FOX\"), React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Reddit\"), ''), createData('Sept 22', '9:55am', isCompact ? convertToIcons('Cardinals @ Panthers') : 'Cardinals @ Panthers', 'FOX', React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"NBC\"), React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Reddit\"), ''), createData('Sept 23', '9:55am', isCompact ? convertToIcons('Masters') : 'Masters', 'NBC', React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"ESPN2\"), React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Reddit\"), '')];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    style: {\n      width: '100%',\n      background: 'black',\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    id: \"header-title\",\n    style: {\n      fontSize: isCompact ? '36px' : '56px',\n      textAlign: 'center',\n      textShadow: '2px 2px orange'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"SPORTSBOT5000\"), React.createElement(\"nav\", {\n    id: \"header-links\",\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"/\",\n    style: {\n      display: 'inline-block',\n      padding: '10px',\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"My Games\"), React.createElement(\"a\", {\n    href: \"/\",\n    style: {\n      display: 'inline-block',\n      padding: '10px',\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Popular Games\"), React.createElement(\"a\", {\n    href: \"/\",\n    style: {\n      display: 'inline-block',\n      padding: '10px',\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"My Teams\"), React.createElement(\"a\", {\n    href: \"/\",\n    style: {\n      display: 'inline-block',\n      padding: '10px',\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Account\"), React.createElement(\"a\", {\n    href: \"/\",\n    style: {\n      display: 'inline-block',\n      padding: '10px',\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Sign Out\")))), React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(MUIDataTable, {\n    data: rows,\n    columns: columns,\n    options: {\n      responsive: 'stacked',\n      selectableRows: 'none',\n      download: false,\n      print: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/paulandnicola/Docs/projects/react/sportsbot5000/src/components/App.jsx"],"names":["React","Fragment","useEffect","useState","Grid","MUIDataTable","App","window","innerWidth","isCompact","setIsCompact","addEventListener","removeEventListener","createData","date","time","game","tv","premium","free","highlights","columns","name","label","convertToIcons","text","matchup","includes","split","display","alignItems","require","trim","toLowerCase","length","padding","rows","width","background","color","fontSize","textAlign","textShadow","responsive","selectableRows","download","print"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport MUIDataTable from 'mui-datatables';\nimport './App.scss';\n\nconst App = () => {\n  const [isCompact, setIsCompact] = useState(window.innerWidth < 960);\n  useEffect(() => {\n    window.addEventListener('resize', () => setIsCompact(window.innerWidth < 960));\n    return () => window.removeEventListener('resize', setIsCompact);\n  });\n\n  const createData = (date, time, game, tv, premium, free, highlights) => ({\n    date, time, game, tv, premium, free, highlights,\n  });\n\n  const columns = [\n    { name: 'date', label: 'Date' },\n    { name: 'time', label: 'Time' },\n    { name: 'game', label: 'Game' },\n    { name: 'tv', label: 'TV' },\n    { name: 'premium', label: 'Premium Streams' },\n    { name: 'free', label: 'Free Streams' },\n    { name: 'highlights', label: 'Highlights' },\n  ];\n\n  const convertToIcons = (text) => {\n    const matchup = text.includes('@') ? text.split('@') : [text];\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <img src={require(`../images/${matchup[0].trim().toLowerCase()}.png`)} height=\"25px\" alt={matchup[0]} />\n        {matchup.length > 1 && (\n          <Fragment>\n            <span style={{ padding: '0px 10px' }}>@</span>\n            <img src={require(`../images/${matchup[1].trim().toLowerCase()}.png`)} height=\"25px\" alt={matchup[1]} />\n          </Fragment>\n        )}\n      </div>\n    );\n  };\n\n  const rows = [\n    createData('Sept 18', '9:55am', isCompact ? convertToIcons('Tottenham @ Chelsea') : 'Tottenham @ Chelsea', 'TNT', <a href=\"/\">TNT</a>, <a href=\"/\">Reddit</a>, ''),\n    createData('Sept 19', '9:55am', isCompact ? convertToIcons('Dbacks @ Padres') : 'Dbacks @ Padres', 'FOX Sports AZ', <a href=\"/\">ABC</a>, <a href=\"/\">Reddit</a>, <a href=\"/\">ESPN</a>),\n    createData('Sept 20', '9:55am', isCompact ? convertToIcons('Suns @ Kings') : 'Suns @ Kings', 'FOX Sports AZ', <a href=\"/\">CBS</a>, <a href=\"/\">Reddit</a>, ''),\n    createData('Sept 21', '9:55am', isCompact ? convertToIcons('Coyotes @ Sharks') : 'Coyotes @ Sharks', 'FOX Sports AZ', <a href=\"/\">FOX</a>, <a href=\"/\">Reddit</a>, ''),\n    createData('Sept 22', '9:55am', isCompact ? convertToIcons('Cardinals @ Panthers') : 'Cardinals @ Panthers', 'FOX', <a href=\"/\">NBC</a>, <a href=\"/\">Reddit</a>, ''),\n    createData('Sept 23', '9:55am', isCompact ? convertToIcons('Masters') : 'Masters', 'NBC', <a href=\"/\">ESPN2</a>, <a href=\"/\">Reddit</a>, ''),\n  ];\n\n\n  return (\n    <div>\n      <Grid container>\n        <Grid container>\n          <header style={{ width: '100%', background: 'black', color: 'white' }}>\n            <h1 id=\"header-title\" style={{ fontSize: isCompact ? '36px' : '56px', textAlign: 'center', textShadow: '2px 2px orange' }}>SPORTSBOT5000</h1>\n            <nav id=\"header-links\" style={{ textAlign: 'center' }}>\n              <a href=\"/\" style={{ display: 'inline-block', padding: '10px', color: 'white' }}>My Games</a>\n              <a href=\"/\" style={{ display: 'inline-block', padding: '10px', color: 'white' }}>Popular Games</a>\n              <a href=\"/\" style={{ display: 'inline-block', padding: '10px', color: 'white' }}>My Teams</a>\n              <a href=\"/\" style={{ display: 'inline-block', padding: '10px', color: 'white' }}>Account</a>\n              <a href=\"/\" style={{ display: 'inline-block', padding: '10px', color: 'white' }}>Sign Out</a>\n            </nav>\n          </header>\n        </Grid>\n        {/*<Button className={button} variant=\"contained\" onClick={() => setShowFilters(!showFilters)}>\n        Filters\n        {showFilters ? <ExpandLess className={rightIcon} /> : <ExpandMore className={rightIcon} />}\n      </Button>\n      {showFilters && (\n        <List disablePadding className={root} dense={true}>\n          {columns.slice(3).map(value => {\n            const labelId = `checkbox-list-label-${value.length === 1 ? value : value.split(' ').join(',')}`;\n\n            return (\n              <ListItem\n                key={value}\n                role={undefined}\n                button\n                onClick={() => handleToggleCheckbox(value)}\n                padding=\"none\"\n              >\n                <Checkbox\n                  classes={{ root: checkbox }}\n                  edge=\"start\"\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n                <ListItemText id={labelId} primary={value} />\n              </ListItem>\n            );\n          })}\n        </List>\n      )}*/}\n\n        <Grid container>\n          <MUIDataTable\n            data={rows}\n            columns={columns}\n            options={{ responsive: 'stacked', selectableRows: 'none', download: false, print: false }}\n          />\n        </Grid>\n        {/*      <Grid container spacing={1} classes={{ root: container }}>\n        <Grid item xs zeroMinWidth style={{ padding: '0px' }}>\n          <Table className={table} size=\"small\">\n            <TableHead>\n              <TableRow classes={{ root: row }}>\n                <Grid container>\n                  {checked.map(header => (\n                    <Grid item xs zeroMinWidth>\n                      <TableCell key={`header-${header}`} classes={{ root: cell }}>{header}</TableCell>\n                    </Grid>\n                  ))}\n                </Grid>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(({\n                date, time, game, tv, premium, free, highlights,\n              }) => (\n                  <TableRow key={`${date}-${time}-${game}`} classes={{ root: row }}>\n                    <Grid container>\n                      {checked.indexOf('Date') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell classes={{ root: cell }} component=\"th\" scope=\"row\">{date}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Time') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell classes={{ root: cell }}>{time}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Game') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell classes={{ root: cell }}>{game}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('TV') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell classes={{ root: cell }}>{tv}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Premium Streams') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell classes={{ root: cell }}>{premium}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Free Streams') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell classes={{ root: cell }}>{free}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Highlights') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell classes={{ root: cell }}>{highlights}</TableCell>\n                        </Grid>\n                      )}\n                    </Grid>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Grid>\n              </Grid>*/}\n      </Grid>\n\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}