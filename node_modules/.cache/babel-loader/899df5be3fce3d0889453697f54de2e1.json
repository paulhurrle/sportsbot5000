{"ast":null,"code":"import _slicedToArray from \"/Users/paulandnicola/Docs/projects/react/sportsbot5000/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/paulandnicola/Docs/projects/react/sportsbot5000/src/components/App.jsx\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Grid from '@material-ui/core/Grid'; // import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MUIDataTable from 'mui-datatables';\nimport './App.scss';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    // marginTop: theme.spacing(3),\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 350\n  },\n  button: {\n    margin: theme.spacing(1),\n    display: 'block',\n    textTransform: 'capitalize'\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n    verticalAlign: 'bottom'\n  }\n}));\n\nconst createData = (date, time, game, tv, premium, free, highlights) => ({\n  date,\n  time,\n  game,\n  tv,\n  premium,\n  free,\n  highlights\n});\n\nconst columns = [{\n  name: 'Date',\n  options: {\n    sort: true\n  }\n}, {\n  name: 'Time',\n  options: {\n    sort: true\n  }\n}, {\n  name: 'Game',\n  options: {\n    sort: true\n  }\n}, {\n  name: 'TV',\n  options: {\n    sort: true\n  }\n}, {\n  name: 'Premium Streams',\n  options: {\n    sort: true\n  }\n}, {\n  name: 'Free Streams',\n  options: {\n    sort: true\n  }\n}, {\n  name: 'Highlights',\n  options: {\n    sort: true\n  }\n}];\nconst rows = [createData({\n  date: 'Sept 18',\n  time: '9:55am',\n  game: 'Tottenham@Chelsea',\n  tv: 'TNT',\n  premium: React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"TNT\"),\n  free: React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Reddit\"),\n  highlights: ''\n}), createData({\n  date: 'Sept 19',\n  time: '9:55am',\n  game: 'Dbacks@Padres',\n  tv: 'FOX Sports AZ',\n  premium: React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"ABC\"),\n  free: React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Reddit\"),\n  highlights: React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"ESPN\")\n}), createData({\n  date: 'Sept 20',\n  time: '9:55am',\n  game: 'Suns@Kings',\n  tv: 'FOX Sports AZ',\n  premium: React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"CBS\"),\n  free: React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Reddit\"),\n  highlights: ''\n}), createData({\n  date: 'Sept 21',\n  time: '9:55am',\n  game: 'Coyotes@Sharks',\n  tv: 'FOX Sports AZ',\n  premium: React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"FOX\"),\n  free: React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Reddit\"),\n  highlights: ''\n}), createData({\n  date: 'Sept 22',\n  time: '9:55am',\n  game: 'Cardinals@Panthers',\n  tv: 'FOX',\n  premium: React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"NBC\"),\n  free: React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Reddit\"),\n  highlights: ''\n}), createData({\n  date: 'Sept 23',\n  time: '9:55am',\n  game: 'Wimbledon Finals - Men\\'s Singles',\n  tv: 'ESPN2',\n  premium: React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"ESPN2\"),\n  free: React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Reddit\"),\n  highlights: ''\n})];\n\nconst App = () => {\n  const _useStyles = useStyles(),\n        button = _useStyles.button,\n        rightIcon = _useStyles.rightIcon,\n        root = _useStyles.root,\n        table = _useStyles.table;\n\n  const _useState = useState(['Date', 'Time', 'Game', 'TV', 'Premium Streams', 'Free Streams', 'Highlights']),\n        _useState2 = _slicedToArray(_useState, 2),\n        checked = _useState2[0],\n        setChecked = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showFilters = _useState4[0],\n        setShowFilters = _useState4[1];\n\n  function handleToggleCheckbox(value) {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  }\n\n  ;\n  return React.createElement(\"div\", {\n    className: \"App \".concat(root),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: button,\n    variant: \"contained\",\n    onClick: () => setShowFilters(!showFilters),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Filters\", showFilters ? React.createElement(ExpandLess, {\n    className: rightIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }) : React.createElement(ExpandMore, {\n    className: rightIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), showFilters && React.createElement(List, {\n    disablePadding: true,\n    className: root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, columns.slice(3).map(value => {\n    const labelId = \"checkbox-list-label-\".concat(value.length === 1 ? value : value.split(' ').join(','));\n    return React.createElement(ListItem, {\n      key: value,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: () => handleToggleCheckbox(value),\n      padding: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      edge: \"start\",\n      checked: checked.indexOf(value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      id: labelId,\n      primary: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }));\n  })), React.createElement(MUIDataTable, {\n    title: \"My Matches\",\n    data: rows,\n    columns: columns,\n    options: {\n      responsive: 'stacked'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/paulandnicola/Docs/projects/react/sportsbot5000/src/components/App.jsx"],"names":["React","useState","makeStyles","Button","ExpandLess","ExpandMore","Grid","List","ListItem","ListItemText","Checkbox","MUIDataTable","useStyles","theme","root","width","overflowX","table","minWidth","button","margin","spacing","display","textTransform","rightIcon","marginLeft","verticalAlign","createData","date","time","game","tv","premium","free","highlights","columns","name","options","sort","rows","App","checked","setChecked","showFilters","setShowFilters","handleToggleCheckbox","value","currentIndex","indexOf","newChecked","push","splice","slice","map","labelId","length","split","join","undefined","responsive"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Grid from '@material-ui/core/Grid';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MUIDataTable from 'mui-datatables';\nimport './App.scss';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    // marginTop: theme.spacing(3),\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n    display: 'block',\n    textTransform: 'capitalize',\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n    verticalAlign: 'bottom',\n  },\n}));\n\nconst createData = (date, time, game, tv, premium, free, highlights) => ({\n  date, time, game, tv, premium, free, highlights,\n});\n\nconst columns = [\n  { name: 'Date', options: { sort: true } },\n  { name: 'Time', options: { sort: true } },\n  { name: 'Game', options: { sort: true } },\n  { name: 'TV', options: { sort: true } },\n  { name: 'Premium Streams', options: { sort: true } },\n  { name: 'Free Streams', options: { sort: true } },\n  { name: 'Highlights', options: { sort: true } },\n];\n\nconst rows = [\n  createData({ date: 'Sept 18', time: '9:55am', game: 'Tottenham@Chelsea', tv: 'TNT', premium: <a href=\"/\">TNT</a>, free: <a href=\"/\">Reddit</a>, highlights: '' }),\n  createData({ date: 'Sept 19', time: '9:55am', game: 'Dbacks@Padres', tv: 'FOX Sports AZ', premium: <a href=\"/\">ABC</a>, free: <a href=\"/\">Reddit</a>, highlights: <a href=\"/\">ESPN</a> }),\n  createData({ date: 'Sept 20', time: '9:55am', game: 'Suns@Kings', tv: 'FOX Sports AZ', premium: <a href=\"/\">CBS</a>, free: <a href=\"/\">Reddit</a>, highlights: '' }),\n  createData({ date: 'Sept 21', time: '9:55am', game: 'Coyotes@Sharks', tv: 'FOX Sports AZ', premium: <a href=\"/\">FOX</a>, free: <a href=\"/\">Reddit</a>, highlights: '' }),\n  createData({ date: 'Sept 22', time: '9:55am', game: 'Cardinals@Panthers', tv: 'FOX', premium: <a href=\"/\">NBC</a>, free: <a href=\"/\">Reddit</a>, highlights: '' }),\n  createData({ date: 'Sept 23', time: '9:55am', game: 'Wimbledon Finals - Men\\'s Singles', tv: 'ESPN2', premium: <a href=\"/\">ESPN2</a>, free: <a href=\"/\">Reddit</a>, highlights: '' }),\n];\n\nconst App = () => {\n  const { button, rightIcon, root, table } = useStyles();\n  const [checked, setChecked] = useState(['Date', 'Time', 'Game', 'TV', 'Premium Streams', 'Free Streams', 'Highlights']);\n  const [showFilters, setShowFilters] = useState(false);\n\n  function handleToggleCheckbox(value) {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return (\n    <div className={`App ${root}`}>\n      <Button className={button} variant=\"contained\" onClick={() => setShowFilters(!showFilters)}>\n        Filters\n        {showFilters ? <ExpandLess className={rightIcon} /> : <ExpandMore className={rightIcon} />}\n      </Button>\n      {showFilters && (\n        <List disablePadding className={root}>\n          {columns.slice(3).map(value => {\n            const labelId = `checkbox-list-label-${value.length === 1 ? value : value.split(' ').join(',')}`;\n\n            return (\n              <ListItem\n                key={value}\n                role={undefined}\n                dense\n                button\n                onClick={() => handleToggleCheckbox(value)}\n                padding=\"none\"\n              >\n                <Checkbox\n                  edge=\"start\"\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n                <ListItemText id={labelId} primary={value} />\n              </ListItem>\n            );\n          })}\n        </List>\n      )}\n\n      <MUIDataTable\n        title={\"My Matches\"}\n        data={rows}\n        columns={columns}\n        options={{ responsive: 'stacked' }}\n      />\n\n      {/*\n      <Grid container spacing={1}>\n        <Grid item xs zeroMinWidth>\n          <Table className={table}>\n            <TableHead>\n              <TableRow>\n                <Grid container>\n                  {checked.map(header => (\n                    <Grid item xs zeroMinWidth direction=\"row\" border={1}>\n                      <TableCell align=\"center\" key={`header-${header}`}>{header}</TableCell>\n                    </Grid>\n                  ))}\n                </Grid>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(({\n                date, time, game, tv, premium, free, highlights,\n              }) => (\n                  <TableRow key={`${date}-${time}-${game}`}>\n                    <Grid container>\n                      {checked.indexOf('Date') !== -1 && (\n                        <Grid item xs zeroMinWidth direction=\"row\">\n                          <TableCell component=\"th\" scope=\"row\" align=\"center\">{date}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Time') !== -1 && (\n                        <Grid item xs zeroMinWidth direction=\"row\">\n                          <TableCell align=\"center\">{time}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Game') !== -1 && (\n                        <Grid item xs={2} zeroMinWidth direction=\"row\">\n                          <TableCell align=\"center\">{game}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('TV') !== -1 && (\n                        <Grid item xs zeroMinWidth direction=\"row\">\n                          <TableCell align=\"center\">{tv}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Premium Streams') !== -1 && (\n                        <Grid item xs zeroMinWidth direction=\"row\">\n                          <TableCell align=\"center\">{premium}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Free Streams') !== -1 && (\n                        <Grid item xs zeroMinWidth direction=\"row\">\n                          <TableCell align=\"center\">{free}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Highlights') !== -1 && (\n                        <Grid item xs zeroMinWidth direction=\"row\">\n                          <TableCell align=\"center\">{highlights}</TableCell>\n                        </Grid>\n                      )}\n                    </Grid>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Grid>\n      </Grid>\n      */}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}