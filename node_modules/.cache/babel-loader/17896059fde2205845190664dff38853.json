{"ast":null,"code":"import _slicedToArray from \"/Users/paulandnicola/Docs/projects/react/sportsbot5000/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/paulandnicola/Docs/projects/react/sportsbot5000/src/components/App.jsx\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './App.scss';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 350\n  }\n}));\n\nconst createData = (date, time, game, tv, premium, free, highlights) => ({\n  date,\n  time,\n  game,\n  tv,\n  premium,\n  free,\n  highlights\n});\n\nconst tableHeaders = ['Date', 'Time', 'Game', 'TV', 'Premium Streams', 'Free Streams', 'Highlights'];\nconst rows = [createData('Sept 18', '9:55am', 'Tottenham@Chelsea', 'TNT', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, \"TNT\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, \"Reddit\"), ''), createData('Sept 19', '9:55am', 'Dbacks@Padres', 'FOX Sports AZ', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, \"ABC\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, \"Reddit\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, \"ESPN\")), createData('Sept 20', '9:55am', 'Suns@Kings', 'FOX Sports AZ', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, \"CBS\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, \"Reddit\"), ''), createData('Sept 21', '9:55am', 'Coyotes@Sharks', 'FOX Sports AZ', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, \"FOX\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, \"Reddit\"), ''), createData('Sept 22', '9:55am', 'Cardinals@Panthers', 'FOX', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, \"NBC\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, \"Reddit\"), ''), createData('Sept 23', '9:55am', 'Wimbledon Finals - Men\\'s Singles', 'ESPN2', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, \"ESPN2\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, \"Reddit\"), '')];\n\nconst App = () => {\n  const _useStyles = useStyles(),\n        table = _useStyles.table,\n        root = _useStyles.root;\n\n  const _useState = useState(['Date', 'Time', 'Game', 'TV', 'Premium Streams', 'Free Streams', 'Highlights']),\n        _useState2 = _slicedToArray(_useState, 2),\n        checked = _useState2[0],\n        setChecked = _useState2[1];\n\n  function handleToggle(value) {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  }\n\n  ;\n  return React.createElement(\"div\", {\n    className: \"App \".concat(root),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, tableHeaders.slice(3).map(value => {\n    const labelId = \"checkbox-list-label-\".concat(value.length === 1 ? value : value.split(' ').join(','));\n    return React.createElement(ListItem, {\n      key: value,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: () => handleToggle(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      edge: \"start\",\n      checked: checked.indexOf(value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      id: labelId,\n      primary: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n  })), React.createElement(Table, {\n    className: table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, checked.map(header => React.createElement(TableCell, {\n    align: \"center\",\n    key: \"header-\".concat(header),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, header)))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, rows.map(({\n    date,\n    time,\n    game,\n    tv,\n    premium,\n    free,\n    highlights\n  }) => React.createElement(TableRow, {\n    key: \"\".concat(date, \"-\").concat(time, \"-\").concat(game),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, date), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, time), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, game), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, tv), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, premium), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, free), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, highlights))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/paulandnicola/Docs/projects/react/sportsbot5000/src/components/App.jsx"],"names":["React","useState","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","List","ListItem","ListItemText","Checkbox","useStyles","theme","root","width","marginTop","spacing","overflowX","table","minWidth","createData","date","time","game","tv","premium","free","highlights","tableHeaders","rows","App","checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","slice","map","labelId","length","split","join","undefined","header"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './App.scss';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 350,\n  },\n}));\n\nconst createData = (date, time, game, tv, premium, free, highlights) => ({\n  date, time, game, tv, premium, free, highlights,\n});\n\nconst tableHeaders = [\n  'Date',\n  'Time',\n  'Game',\n  'TV',\n  'Premium Streams',\n  'Free Streams',\n  'Highlights',\n];\n\nconst rows = [\n  createData('Sept 18', '9:55am', 'Tottenham@Chelsea', 'TNT', <a href=\"/\">TNT</a>, <a href=\"/\">Reddit</a>, ''),\n  createData('Sept 19', '9:55am', 'Dbacks@Padres', 'FOX Sports AZ', <a href=\"/\">ABC</a>, <a href=\"/\">Reddit</a>, <a href=\"/\">ESPN</a>),\n  createData('Sept 20', '9:55am', 'Suns@Kings', 'FOX Sports AZ', <a href=\"/\">CBS</a>, <a href=\"/\">Reddit</a>, ''),\n  createData('Sept 21', '9:55am', 'Coyotes@Sharks', 'FOX Sports AZ', <a href=\"/\">FOX</a>, <a href=\"/\">Reddit</a>, ''),\n  createData('Sept 22', '9:55am', 'Cardinals@Panthers', 'FOX', <a href=\"/\">NBC</a>, <a href=\"/\">Reddit</a>, ''),\n  createData('Sept 23', '9:55am', 'Wimbledon Finals - Men\\'s Singles', 'ESPN2', <a href=\"/\">ESPN2</a>, <a href=\"/\">Reddit</a>, ''),\n];\n\nconst App = () => {\n  const { table, root } = useStyles();\n  const [checked, setChecked] = useState(['Date', 'Time', 'Game', 'TV', 'Premium Streams', 'Free Streams', 'Highlights']);\n\n  function handleToggle(value) {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return (\n    <div className={`App ${root}`}>\n      <List>\n        {tableHeaders.slice(3).map(value => {\n          const labelId = `checkbox-list-label-${value.length === 1 ? value : value.split(' ').join(',')}`;\n\n          return (\n            <ListItem\n              key={value}\n              role={undefined}\n              dense\n              button\n              onClick={() => handleToggle(value)}\n            >\n              <Checkbox\n                edge=\"start\"\n                checked={checked.indexOf(value) !== -1}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{ 'aria-labelledby': labelId }}\n              />\n              <ListItemText id={labelId} primary={value} />\n            </ListItem>\n          );\n        })}\n      </List>\n\n      <Table className={table}>\n        <TableHead>\n          <TableRow>\n            {checked.map(header => (\n              <TableCell align=\"center\" key={`header-${header}`}>{header}</TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(({\n            date, time, game, tv, premium, free, highlights,\n          }) => (\n              <TableRow key={`${date}-${time}-${game}`}>\n                <TableCell component=\"th\" scope=\"row\" align=\"center\">{date}</TableCell>\n                <TableCell align=\"center\">{time}</TableCell>\n                <TableCell align=\"center\">{game}</TableCell>\n                <TableCell align=\"center\">{tv}</TableCell>\n                <TableCell align=\"center\">{premium}</TableCell>\n                <TableCell align=\"center\">{free}</TableCell>\n                <TableCell align=\"center\">{highlights}</TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}