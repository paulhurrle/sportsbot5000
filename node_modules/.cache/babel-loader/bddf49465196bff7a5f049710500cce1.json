{"ast":null,"code":"import _slicedToArray from \"/Users/paulandnicola/Docs/projects/react/sportsbot5000/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/paulandnicola/Docs/projects/react/sportsbot5000/src/components/App.jsx\";\nimport React, { useState } from 'react';\nimport { makeStyles, createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore'; // import Grid from '@material-ui/core/Grid';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MUIDataTable from 'mui-datatables';\nimport './App.scss';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    // marginTop: theme.spacing(3),\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 350\n  },\n  button: {\n    margin: theme.spacing(1),\n    display: 'block',\n    textTransform: 'capitalize',\n    backgroundColor: 'white'\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n    verticalAlign: 'bottom'\n  },\n  checkbox: {\n    padding: '0px 10px'\n  },\n  row: {\n    border: '1px solid gray'\n  },\n  cell: {\n    border: 'none',\n    '&$last-child': {\n      paddingRight: theme.spacing(4)\n    }\n  },\n  container: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst createData = (date, time, game, tv, premium, free, highlights) => ({\n  date,\n  time,\n  game,\n  tv,\n  premium,\n  free,\n  highlights\n});\n\nconst columns = [{\n  name: 'date',\n  label: 'Date'\n}, {\n  name: 'time',\n  label: 'Time'\n}, {\n  name: 'game',\n  label: 'Game'\n}, {\n  name: 'tv',\n  label: 'TV'\n}, {\n  name: 'premium',\n  label: 'Premium Streams'\n}, {\n  name: 'free',\n  label: 'Free Streams'\n}, {\n  name: 'highlights',\n  label: 'Highlights'\n}];\nconst rows = [createData('Sept 18', '9:55am', 'Tottenham @ Chelsea', 'TNT', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, \"TNT\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, \"Reddit\"), ''), createData('Sept 19', '9:55am', 'Dbacks @ Padres', 'FOX Sports AZ', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, \"ABC\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, \"Reddit\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, \"ESPN\")), createData('Sept 20', '9:55am', 'Suns @ Kings', 'FOX Sports AZ', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, \"CBS\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, \"Reddit\"), ''), createData('Sept 21', '9:55am', 'Coyotes @ Sharks', 'FOX Sports AZ', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}, \"FOX\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}, \"Reddit\"), ''), createData('Sept 22', '9:55am', 'Cardinals @ Panthers', 'FOX', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}, \"NBC\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}, \"Reddit\"), ''), createData('Sept 23', '9:55am', 'Masters', 'NBC', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n}, \"ESPN2\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n}, \"Reddit\"), '')];\n\nconst App = () => {\n  // const { button, cell, checkbox, container, rightIcon, root, row, table } = useStyles();\n  const _useStyles = useStyles(),\n        button = _useStyles.button,\n        checkbox = _useStyles.checkbox,\n        rightIcon = _useStyles.rightIcon,\n        root = _useStyles.root;\n\n  const _useState = useState(['Date', 'Time', 'Game', 'TV', 'Premium Streams', 'Free Streams', 'Highlights']),\n        _useState2 = _slicedToArray(_useState, 2),\n        checked = _useState2[0],\n        setChecked = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showFilters = _useState4[0],\n        setShowFilters = _useState4[1];\n\n  function handleToggleCheckbox(value) {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  }\n\n  ;\n\n  getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          backgroundColor: \"#FF0000\"\n        }\n      }\n    }\n  });\n\n  return React.createElement(\"div\", {\n    className: \"App \".concat(root),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: button,\n    variant: \"contained\",\n    onClick: () => setShowFilters(!showFilters),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Filters\", showFilters ? React.createElement(ExpandLess, {\n    className: rightIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }) : React.createElement(ExpandMore, {\n    className: rightIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), showFilters && React.createElement(List, {\n    disablePadding: true,\n    className: root,\n    dense: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, columns.slice(3).map(value => {\n    const labelId = \"checkbox-list-label-\".concat(value.length === 1 ? value : value.split(' ').join(','));\n    return React.createElement(ListItem, {\n      key: value,\n      role: undefined,\n      button: true,\n      onClick: () => handleToggleCheckbox(value),\n      padding: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      classes: {\n        root: checkbox\n      },\n      edge: \"start\",\n      checked: checked.indexOf(value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      id: labelId,\n      primary: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }));\n  })), React.createElement(MuiThemeProvider, {\n    theme: this.getMuiTheme(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(MUIDataTable, {\n    data: rows,\n    columns: columns,\n    options: {\n      responsive: 'stacked',\n      selectableRows: 'none'\n    },\n    download: false,\n    print: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/paulandnicola/Docs/projects/react/sportsbot5000/src/components/App.jsx"],"names":["React","useState","makeStyles","createMuiTheme","MuiThemeProvider","Button","ExpandLess","ExpandMore","List","ListItem","ListItemText","Checkbox","MUIDataTable","useStyles","theme","root","width","overflowX","table","minWidth","button","margin","spacing","display","textTransform","backgroundColor","rightIcon","marginLeft","verticalAlign","checkbox","padding","row","border","cell","paddingRight","container","createData","date","time","game","tv","premium","free","highlights","columns","name","label","rows","App","checked","setChecked","showFilters","setShowFilters","handleToggleCheckbox","value","currentIndex","indexOf","newChecked","push","splice","getMuiTheme","overrides","MUIDataTableBodyCell","slice","map","labelId","length","split","join","undefined","responsive","selectableRows"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles, createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\n// import Grid from '@material-ui/core/Grid';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\n// import TableRow from '@material-ui/core/TableRow';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MUIDataTable from 'mui-datatables';\nimport './App.scss';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    // marginTop: theme.spacing(3),\n    overflowX: 'auto',\n\n  },\n  table: {\n    minWidth: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n    display: 'block',\n    textTransform: 'capitalize',\n    backgroundColor: 'white',\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n    verticalAlign: 'bottom',\n  },\n  checkbox: {\n    padding: '0px 10px',\n  },\n  row: {\n    border: '1px solid gray',\n  },\n  cell: {\n    border: 'none',\n    '&$last-child': {\n      paddingRight: theme.spacing(4),\n    }\n  },\n  container: {\n    margin: theme.spacing(1),\n  }\n}));\n\nconst createData = (date, time, game, tv, premium, free, highlights) => ({\n  date, time, game, tv, premium, free, highlights,\n});\n\nconst columns = [\n  { name: 'date', label: 'Date' },\n  { name: 'time', label: 'Time' },\n  { name: 'game', label: 'Game' },\n  { name: 'tv', label: 'TV' },\n  { name: 'premium', label: 'Premium Streams' },\n  { name: 'free', label: 'Free Streams' },\n  { name: 'highlights', label: 'Highlights' },\n];\n\nconst rows = [\n  createData('Sept 18', '9:55am', 'Tottenham @ Chelsea', 'TNT', <a href=\"/\">TNT</a>, <a href=\"/\">Reddit</a>, ''),\n  createData('Sept 19', '9:55am', 'Dbacks @ Padres', 'FOX Sports AZ', <a href=\"/\">ABC</a>, <a href=\"/\">Reddit</a>, <a href=\"/\">ESPN</a>),\n  createData('Sept 20', '9:55am', 'Suns @ Kings', 'FOX Sports AZ', <a href=\"/\">CBS</a>, <a href=\"/\">Reddit</a>, ''),\n  createData('Sept 21', '9:55am', 'Coyotes @ Sharks', 'FOX Sports AZ', <a href=\"/\">FOX</a>, <a href=\"/\">Reddit</a>, ''),\n  createData('Sept 22', '9:55am', 'Cardinals @ Panthers', 'FOX', <a href=\"/\">NBC</a>, <a href=\"/\">Reddit</a>, ''),\n  createData('Sept 23', '9:55am', 'Masters', 'NBC', <a href=\"/\">ESPN2</a>, <a href=\"/\">Reddit</a>, ''),\n];\n\nconst App = () => {\n  // const { button, cell, checkbox, container, rightIcon, root, row, table } = useStyles();\n  const { button, checkbox, rightIcon, root } = useStyles();\n  const [checked, setChecked] = useState(['Date', 'Time', 'Game', 'TV', 'Premium Streams', 'Free Streams', 'Highlights']);\n  const [showFilters, setShowFilters] = useState(false);\n\n  function handleToggleCheckbox(value) {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  getMuiTheme = () => createMuiTheme({\n    overrides: {\n      MUIDataTableBodyCell: {\n        root: {\n          backgroundColor: \"#FF0000\"\n        }\n      }\n    }\n  });\n\n  return (\n    <div className={`App ${root}`}>\n      <Button className={button} variant=\"contained\" onClick={() => setShowFilters(!showFilters)}>\n        Filters\n        {showFilters ? <ExpandLess className={rightIcon} /> : <ExpandMore className={rightIcon} />}\n      </Button>\n      {showFilters && (\n        <List disablePadding className={root} dense={true}>\n          {columns.slice(3).map(value => {\n            const labelId = `checkbox-list-label-${value.length === 1 ? value : value.split(' ').join(',')}`;\n\n            return (\n              <ListItem\n                key={value}\n                role={undefined}\n                button\n                onClick={() => handleToggleCheckbox(value)}\n                padding=\"none\"\n              >\n                <Checkbox\n                  classes={{ root: checkbox }}\n                  edge=\"start\"\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n                <ListItemText id={labelId} primary={value} />\n              </ListItem>\n            );\n          })}\n        </List>\n      )}\n\n      <MuiThemeProvider theme={this.getMuiTheme()}>\n        <MUIDataTable\n          data={rows}\n          columns={columns}\n          options={{ responsive: 'stacked', selectableRows: 'none' }}\n          download={false}\n          print={false}\n        />\n      </MuiThemeProvider>\n      {/*      <Grid container spacing={1} classes={{ root: container }}>\n        <Grid item xs zeroMinWidth style={{ padding: '0px' }}>\n          <Table className={table} size=\"small\">\n            <TableHead>\n              <TableRow classes={{ root: row }}>\n                <Grid container>\n                  {checked.map(header => (\n                    <Grid item xs zeroMinWidth>\n                      <TableCell key={`header-${header}`} classes={{ root: cell }}>{header}</TableCell>\n                    </Grid>\n                  ))}\n                </Grid>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(({\n                date, time, game, tv, premium, free, highlights,\n              }) => (\n                  <TableRow key={`${date}-${time}-${game}`} classes={{ root: row }}>\n                    <Grid container>\n                      {checked.indexOf('Date') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell classes={{ root: cell }} component=\"th\" scope=\"row\">{date}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Time') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell classes={{ root: cell }}>{time}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Game') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell classes={{ root: cell }}>{game}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('TV') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell classes={{ root: cell }}>{tv}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Premium Streams') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell classes={{ root: cell }}>{premium}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Free Streams') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell classes={{ root: cell }}>{free}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Highlights') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell classes={{ root: cell }}>{highlights}</TableCell>\n                        </Grid>\n                      )}\n                    </Grid>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Grid>\n              </Grid>*/}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}