{"ast":null,"code":"import _slicedToArray from \"/Users/paulandnicola/Docs/projects/react/sportsbot5000/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/paulandnicola/Docs/projects/react/sportsbot5000/src/components/App.jsx\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox'; // import MUIDataTable from 'mui-datatables';\n\nimport './App.scss';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    // marginTop: theme.spacing(3),\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 350\n  },\n  button: {\n    margin: theme.spacing(1),\n    display: 'block',\n    textTransform: 'capitalize'\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n    verticalAlign: 'bottom'\n  },\n  checkbox: {\n    padding: '0px 0px'\n  }\n}));\n\nconst createData = (date, time, game, tv, premium, free, highlights) => ({\n  date,\n  time,\n  game,\n  tv,\n  premium,\n  free,\n  highlights\n});\n\nconst columns = ['Date', 'Time', 'Game', 'TV', 'Premium Streams', 'Free Streams', 'Highlights'];\nconst rows = [createData('Sept 18', '9:55am', 'Tottenham@Chelsea', 'TNT', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, \"TNT\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, \"Reddit\"), ''), createData('Sept 19', '9:55am', 'Dbacks@Padres', 'FOX Sports AZ', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, \"ABC\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, \"Reddit\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, \"ESPN\")), createData('Sept 20', '9:55am', 'Suns@Kings', 'FOX Sports AZ', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, \"CBS\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, \"Reddit\"), ''), createData('Sept 21', '9:55am', 'Coyotes@Sharks', 'FOX Sports AZ', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}, \"FOX\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}, \"Reddit\"), ''), createData('Sept 22', '9:55am', 'Cardinals@Panthers', 'FOX', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}, \"NBC\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}, \"Reddit\"), ''), createData('Sept 23', '9:55am', 'Wimbledon Finals - Men\\'s Singles', 'ESPN2', React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}, \"ESPN2\"), React.createElement(\"a\", {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}, \"Reddit\"), '')];\n\nconst App = () => {\n  const _useStyles = useStyles(),\n        button = _useStyles.button,\n        checkbox = _useStyles.checkbox,\n        rightIcon = _useStyles.rightIcon,\n        root = _useStyles.root,\n        table = _useStyles.table;\n\n  const _useState = useState(['Date', 'Time', 'Game', 'TV', 'Premium Streams', 'Free Streams', 'Highlights']),\n        _useState2 = _slicedToArray(_useState, 2),\n        checked = _useState2[0],\n        setChecked = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showFilters = _useState4[0],\n        setShowFilters = _useState4[1];\n\n  function handleToggleCheckbox(value) {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  }\n\n  ;\n  return React.createElement(\"div\", {\n    className: \"App \".concat(root),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: button,\n    variant: \"contained\",\n    onClick: () => setShowFilters(!showFilters),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Filters\", showFilters ? React.createElement(ExpandLess, {\n    className: rightIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }) : React.createElement(ExpandMore, {\n    className: rightIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), showFilters && React.createElement(List, {\n    disablePadding: true,\n    className: root,\n    dense: true,\n    disablePadding: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, columns.slice(3).map(value => {\n    const labelId = \"checkbox-list-label-\".concat(value.length === 1 ? value : value.split(' ').join(','));\n    return React.createElement(ListItem, {\n      key: value,\n      role: undefined,\n      button: true,\n      onClick: () => handleToggleCheckbox(value),\n      padding: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      classes: {\n        checkbox\n      },\n      edge: \"start\",\n      checked: checked.indexOf(value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(ListItemText, {\n      id: labelId,\n      primary: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n  })), React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: table,\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, checked.map(header => React.createElement(Grid, {\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    key: \"header-\".concat(header),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, header)))))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, rows.map(({\n    date,\n    time,\n    game,\n    tv,\n    premium,\n    free,\n    highlights\n  }) => React.createElement(TableRow, {\n    key: \"\".concat(date, \"-\").concat(time, \"-\").concat(game),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, checked.indexOf('Date') !== -1 && React.createElement(Grid, {\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, date)), checked.indexOf('Time') !== -1 && React.createElement(Grid, {\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, time)), checked.indexOf('Game') !== -1 && React.createElement(Grid, {\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, game)), checked.indexOf('TV') !== -1 && React.createElement(Grid, {\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, tv)), checked.indexOf('Premium Streams') !== -1 && React.createElement(Grid, {\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, premium)), checked.indexOf('Free Streams') !== -1 && React.createElement(Grid, {\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, free)), checked.indexOf('Highlights') !== -1 && React.createElement(Grid, {\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, highlights))))))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/paulandnicola/Docs/projects/react/sportsbot5000/src/components/App.jsx"],"names":["React","useState","makeStyles","Button","ExpandLess","ExpandMore","Grid","Table","TableBody","TableCell","TableHead","TableRow","List","ListItem","ListItemText","Checkbox","useStyles","theme","root","width","overflowX","table","minWidth","button","margin","spacing","display","textTransform","rightIcon","marginLeft","verticalAlign","checkbox","padding","createData","date","time","game","tv","premium","free","highlights","columns","rows","App","checked","setChecked","showFilters","setShowFilters","handleToggleCheckbox","value","currentIndex","indexOf","newChecked","push","splice","slice","map","labelId","length","split","join","undefined","header"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import MUIDataTable from 'mui-datatables';\nimport './App.scss';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    // marginTop: theme.spacing(3),\n    overflowX: 'auto',\n\n  },\n  table: {\n    minWidth: 350,\n  },\n  button: {\n    margin: theme.spacing(1),\n    display: 'block',\n    textTransform: 'capitalize',\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n    verticalAlign: 'bottom',\n  },\n  checkbox: {\n    padding: '0px 0px',\n  }\n}));\n\nconst createData = (date, time, game, tv, premium, free, highlights) => ({\n  date, time, game, tv, premium, free, highlights,\n});\n\nconst columns = [\n  'Date',\n  'Time',\n  'Game',\n  'TV',\n  'Premium Streams',\n  'Free Streams',\n  'Highlights',\n];\n\nconst rows = [\n  createData('Sept 18', '9:55am', 'Tottenham@Chelsea', 'TNT', <a href=\"/\">TNT</a>, <a href=\"/\">Reddit</a>, ''),\n  createData('Sept 19', '9:55am', 'Dbacks@Padres', 'FOX Sports AZ', <a href=\"/\">ABC</a>, <a href=\"/\">Reddit</a>, <a href=\"/\">ESPN</a>),\n  createData('Sept 20', '9:55am', 'Suns@Kings', 'FOX Sports AZ', <a href=\"/\">CBS</a>, <a href=\"/\">Reddit</a>, ''),\n  createData('Sept 21', '9:55am', 'Coyotes@Sharks', 'FOX Sports AZ', <a href=\"/\">FOX</a>, <a href=\"/\">Reddit</a>, ''),\n  createData('Sept 22', '9:55am', 'Cardinals@Panthers', 'FOX', <a href=\"/\">NBC</a>, <a href=\"/\">Reddit</a>, ''),\n  createData('Sept 23', '9:55am', 'Wimbledon Finals - Men\\'s Singles', 'ESPN2', <a href=\"/\">ESPN2</a>, <a href=\"/\">Reddit</a>, ''),\n];\n\nconst App = () => {\n  const { button, checkbox, rightIcon, root, table } = useStyles();\n  const [checked, setChecked] = useState(['Date', 'Time', 'Game', 'TV', 'Premium Streams', 'Free Streams', 'Highlights']);\n  const [showFilters, setShowFilters] = useState(false);\n\n  function handleToggleCheckbox(value) {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return (\n    <div className={`App ${root}`}>\n      <Button className={button} variant=\"contained\" onClick={() => setShowFilters(!showFilters)}>\n        Filters\n        {showFilters ? <ExpandLess className={rightIcon} /> : <ExpandMore className={rightIcon} />}\n      </Button>\n      {showFilters && (\n        <List disablePadding className={root} dense={true} disablePadding={true}>\n          {columns.slice(3).map(value => {\n            const labelId = `checkbox-list-label-${value.length === 1 ? value : value.split(' ').join(',')}`;\n\n            return (\n              <ListItem\n                key={value}\n                role={undefined}\n                button\n                onClick={() => handleToggleCheckbox(value)}\n                padding=\"none\"\n              >\n                <Checkbox\n                  classes={{ checkbox }}\n                  edge=\"start\"\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n                <ListItemText id={labelId} primary={value} />\n              </ListItem>\n            );\n          })}\n        </List>\n      )}\n\n      {/* <MUIDataTable\n      //   data={rows}\n      //   columns={columns}\n      //   options={{ responsive: 'stacked', selectableRows: 'none' }}\n      // /> */}\n\n      <Grid container spacing={1}>\n        <Grid item xs zeroMinWidth>\n          <Table className={table} size=\"small\">\n            <TableHead>\n              <TableRow>\n                <Grid container>\n                  {checked.map(header => (\n                    <Grid item xs zeroMinWidth>\n                      <TableCell key={`header-${header}`}>{header}</TableCell>\n                    </Grid>\n                  ))}\n                </Grid>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(({\n                date, time, game, tv, premium, free, highlights,\n              }) => (\n                  <TableRow key={`${date}-${time}-${game}`}>\n                    <Grid container>\n                      {checked.indexOf('Date') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell component=\"th\" scope=\"row\">{date}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Time') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell>{time}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Game') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell>{game}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('TV') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell>{tv}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Premium Streams') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell>{premium}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Free Streams') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell>{free}</TableCell>\n                        </Grid>\n                      )}\n                      {checked.indexOf('Highlights') !== -1 && (\n                        <Grid item xs zeroMinWidth>\n                          <TableCell>{highlights}</TableCell>\n                        </Grid>\n                      )}\n                    </Grid>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}